package com.trance.tranceview.mapdata;

import android.app.Application;

/**
 * ��Ϸ��ͼ���
 * 
 * @author ZhangYanlin
 * 
 */
public class MapData extends Application {
	// 引发异常：在一些不规范的代码中经常看到Activity或者是Service当中定义许多静态成员属性。这样做可能会造成许多莫名其妙的null
	// pointer异常。

	// 异常分析：Java虚拟机的垃圾回收机制会主动回收没有被引用的对象或属性。在内存不足时，虚拟机会主动回收处于后台的Activity或Service所
	// 占用的内存。当应用再次去调用静态属性或对象的时候，就会造成null pointer异常

	// 解决异常：Application在整个应用中，只要进程存在，Application的静态成员变量就不会被回收，不会造成null pointer异常
	// @link{BlockType}
	public final static int[][] baseMap =
	{
		{ 0, 7, 0, 7, 0, 7, 1, 5, 1, 7, 0, 7, 0, 7, 0, 7 },
		{ 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 1, 1, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1 },
		{ 1, 1, 1, 1, 1, 4, 4, 4, 0, 1, 2, 2, 2, 1, 1, 0 },
		{ 0, 0, 0, 1, 0, 0, 4, 4, 0, 1, 1, 0, 2, 2, 1, 0 },
		{ 1, 0, 0, 1, 0, 0, 0, 2, 2, 1, 1, 1, 1, 0, 0, 1 },
		{ 1, 1, 1, 0, 2, 1, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1 },
		{ 0, 1, 1, 4, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0 },
		{ 0, 0, 0, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1 },
		{ 0, 0, 0, 4, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0 },
		{ 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1 },
		{ 3, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 3 },
		{ 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0 },
		{ 7, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 7 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0 },
		{ 0, 1, 0, 1, 0, 1, 1, 1, 6, 1, 0, 1, 0, 0, 1, 1 }
	};

	/**
	 * 是否处于游戏编辑界面
	 */
	public static boolean other = false;

	
	/**
	 * game over
	 */
	public static boolean gameover;
}
